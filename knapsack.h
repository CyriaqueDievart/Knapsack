int meta(Item *tab, int n, long int b);
void razObjSelect(int *objSelect, int n);
void razBetter(int *better, int n);
void initialisation(Item *tab, int n, long int b, int *objSelect);
long int calculOpt(Item *tab, int n, int *objSelect);
void selectBestInGroup(Item *tab, int n, long int b, int *objSelect);
int bestOne(Item item);
int calculpoids(Item *tab, int n, int *objSelect);
void selectRandom(Item *tab, int n, long int b, int *objSelect);
void orderBetter(Item *tab, int n, int *better);
void selectBetter(Item *tab, int n, int *better);
void triSelection(Item *tab, int *better, int n);
void triBulle(Item *tab, int *better, int n);
void triPermutation(Item *tab, int *better, int n);
float rapportPrixPoids(Item *tab, int index);
int quotient(int dividende, int diviseur);
int reste (int dividende, int diviseur);
int getPoids(Item *tab, int index);
int getPrix(Item *tab, int index);
void greedy(Item *tab, int n, long int b, int *objSelect, int *better);
int** initMatrix(int n);
void razMsolution (int **Msolution, int n);
void printMatrix(int **m, int x, int y);